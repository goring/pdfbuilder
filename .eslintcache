[{"/Users/cgor/Github/pdfbuilder/src/index.js":"1","/Users/cgor/Github/pdfbuilder/src/App.js":"2","/Users/cgor/Github/pdfbuilder/src/reportWebVitals.js":"3","/Users/cgor/Github/pdfbuilder/src/components/PreviewWindow.js":"4","/Users/cgor/Github/pdfbuilder/src/components/Panel.js":"5","/Users/cgor/Github/pdfbuilder/src/components/FontSelection.js":"6","/Users/cgor/Github/pdfbuilder/src/components/Details.js":"7","/Users/cgor/Github/pdfbuilder/src/components/Buttons.js":"8","/Users/cgor/Github/pdfbuilder/src/components/Stage.js":"9","/Users/cgor/Github/pdfbuilder/src/components/ImageDropper.js":"10","/Users/cgor/Github/pdfbuilder/src/components/StageName.js":"11","/Users/cgor/Github/pdfbuilder/src/components/PDFMaker.js":"12","/Users/cgor/Github/pdfbuilder/src/assets/Roboto.js":"13","/Users/cgor/Github/pdfbuilder/src/assets/test.js":"14"},{"size":500,"mtime":1608770741597,"results":"15","hashOfConfig":"16"},{"size":1059,"mtime":1608924376285,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1608770741597,"results":"18","hashOfConfig":"16"},{"size":2895,"mtime":1608987487893,"results":"19","hashOfConfig":"16"},{"size":2808,"mtime":1608987736450,"results":"20","hashOfConfig":"16"},{"size":3018,"mtime":1608987361877,"results":"21","hashOfConfig":"16"},{"size":2435,"mtime":1608926391904,"results":"22","hashOfConfig":"16"},{"size":1079,"mtime":1608902348429,"results":"23","hashOfConfig":"16"},{"size":589,"mtime":1608770741597,"results":"24","hashOfConfig":"16"},{"size":1567,"mtime":1608984022263,"results":"25","hashOfConfig":"16"},{"size":674,"mtime":1608770741597,"results":"26","hashOfConfig":"16"},{"size":4222,"mtime":1608989277899,"results":"27","hashOfConfig":"16"},{"size":230296,"mtime":1608989151400,"results":"28","hashOfConfig":"16"},{"size":834593,"mtime":1608989015743,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"17xqy7g",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/cgor/Github/pdfbuilder/src/index.js",[],["66","67"],"/Users/cgor/Github/pdfbuilder/src/App.js",["68"],"import React, { useState, useEffect } from 'react';\nimport Panel from './components/Panel'\nimport PDFMaker from './components/PDFMaker';\nimport PreviewWindow from './components/PreviewWindow'\n\nfunction App() {\n    const [details, setDetails] = useState()\n    const [saving, isSaving] = useState(false)\n    \n\n    return (\n        <div className=\"h-screen w-screen bg-darkTheme\">\n            <div className=\"flex flex-row justify-center w-screen h-screen\">\n                <div className=\"flex flex-row justify-center w-3/4 h-screen\">\n                    <PreviewWindow details={details}/>\n\n                    <div className=\"flex flex-col justify-between md:py-16 sm:py-0 h-screen content-center items-center w-5/12 \">\n\n                        <Panel saveToPDF = {(save) => isSaving(save) } preview={(details) => setDetails(details)} />\n\n                        <PDFMaker saving={saving} details={details} isSaving={(save) => isSaving(save)}/>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    );\n}\n\nexport default App;\n","/Users/cgor/Github/pdfbuilder/src/reportWebVitals.js",[],"/Users/cgor/Github/pdfbuilder/src/components/PreviewWindow.js",["69","70","71"],"import React, {useState} from 'react'\nimport Placeholder from '../assets/placeholder.png'\nexport default function PreviewWindow({details}) {\n\n    const valOf =(obj)=>  Object.values(obj)[0]\n\n    const inputBuilder = (title, value, padding=0) => {\n        return (\n            <div className={`flex flex-col w-full ${padding}`}>\n                <label className={`${valOf(details.fontFamily)} ${valOf(details.fontWeight)} ${valOf(details.fontSize)} font-sans text-xs text-black pb-2`}>{title}</label>\n                <p className={`${valOf(details.fontFamily)} ${valOf(details.fontWeight)} ${valOf(details.fontSize)} text-sm border-t border-b border-l border-r border-black pl-3 p-1 ${value?\"pb-2\":\"pb-8\"}`}>{value}</p>\n            </div>\n        )\n    }\n\n    const page = () =>  { \n\n        return(\n        \n        <div className=\"flex flex-col m-8 \">\n            <div className=\"w-full flex justify-around h-full items-center\">\n                <div className=\"flex flex-col  h-5/6 w-full justify-between\">\n                    <div className=\"flex justify-around mb-8\">\n                        <h1 className={`text-3xl ${valOf(details.fontFamily)}`}>{details.documentTitle == \"\" ? \"Document Title\" : details.documentTitle}</h1>\n                    </div>\n                    <div className=\"flex flex-row justify-around w-full\"> \n                        <div className=\"flex flex-col justify-evenly m-auto w-full\">\n                            {inputBuilder('First Name', details.firstName,\"pr-4\")} \n                            {inputBuilder('Last Name', details.lastName, \"pr-4\")} \n                        </div>\n                        <img className=\"h-32 w-32 mt-4\" src={details.image ? details.image : Placeholder }></img>\n                    </div>\n                    <div className=\"flex flex-row justify-between\">\n                        {inputBuilder('Address Line 1', details.addressLine1)} \n                    </div>\n                    <div className=\"flex flex-row justify-between\">\n                        {inputBuilder('Address Line 2', details.addressLine2)} \n                    </div>\n                    <div className=\"flex flex-row justify-between\">\n                        {inputBuilder('City', details.city,\"mr-2\")} \n                        {inputBuilder('Postal/Zip Code', details.postalCode, \"ml-2\")} \n                    </div>\n                    <div className=\"flex flex-row justify-between\">\n                        {inputBuilder('Telephone', details.telephone, \"mr-2\")} \n                        {inputBuilder('Country', details.country,\"ml-2\")} \n                    </div>\n                </div>\n            </div>\n        </div>\n    )}\n    return (\n        \n        <div className=\"border-solid border-white border-2 rounded-lg w-1/2 mx-4 my-16 bg-white-400 sm:overflow-scroll\">\n\n            {details ? page() : \"waiting for input...\"}\n\n        </div>\n\n    )\n}\n","/Users/cgor/Github/pdfbuilder/src/components/Panel.js",["72","73","74","75"],"import React, { useState, useEffect } from 'react';\nimport Stage from './Stage'\nimport Details from './Details'\nimport Buttons from './Buttons';\nimport ImageDropper from './ImageDropper';\nimport FontSelection from './FontSelection';\n\n\nfunction Panel({preview, saveToPDF}) {\n    const stages = 2\n    const [currentStage, setCurrentStage] = useState(0)\n    const [dispatching, isDispatching] = useState(false)\n    const [details, setDetails] = useState({\n        documentTitle:\"\",\n        firstName: \"\",\n        lastName: \"\",\n        addressLine1: \"\",\n        addressLine2: \"\",\n        city: \"\",\n        postalCode: \"\",\n        country: \"\",\n        telephone: \"\",\n        fontFamily:{sans:\"font-sans\"},\n        fontSize:{normal:\"text-base\"},\n        fontWeight:{normal:\"font-normal\"},\n        image:\"\"\n    });\n    \n\n    \n\n    const stageMap = { \n        0: () => (<Details />), \n        1: () => (<ImageDropper \n                            setImage={(image)=>setDetails(prevState=>({...prevState, image}))}/>), \n        2: () => (<FontSelection \n                            setFontFamily={(fontFamily)=>setDetails(prevState=>({...prevState, fontFamily}))}\n                            setFontWeight={(fontWeight)=> setDetails(prevState=>({...prevState, fontWeight}))} \n                            setFontSize={(fontSize)=> setDetails(prevState=>({...prevState, fontSize}))} \n                            />) }\n\n    const stageHandler = () => {\n\n    }\n\n    useEffect(()=> {\n        preview(details)\n    })\n\n    const onSubmitHandler = (e) => {\n        e.preventDefault()\n    }\n\n    const saveHandler = (e) => {\n        saveToPDF(true)\n        console.log(\"final state\")\n    }\n\n    const handleSubmit = () => {\n        return details\n    }\n\n    const onChangeHandler = (e) => {\n        setDetails((prevState) => ({\n            ...prevState,\n            [e.target.name]: e.target.value\n        }))\n    }\n    return (\n        <div className=\"flex h-full w-full \">\n            <form\n                className=\"flex flex-col w-full justify-between h-full\"\n                onSubmit={(e) => onSubmitHandler(e)}\n                onChange={(e) => onChangeHandler(e)}>\n                <Stage currentStage={currentStage} />\n                <div className=\"sm:overflow-scroll sm:h-screen sm:pt-auto\">\n                    {stageMap[currentStage]()}\n                </div>\n                <div>\n                <Buttons\n                    save={(e) => saveHandler(e)}\n                    switchStage={(x) => { console.log(currentStage); x ? setCurrentStage(currentStage + 1 % stages) : setCurrentStage((currentStage - 1 >= 0) ? (currentStage - 1) : currentStage) }}\n                    final={currentStage === stages ? true : false} />\n                </div>\n            </form>\n        </div>\n\n    );\n}\n\nexport default Panel;\n","/Users/cgor/Github/pdfbuilder/src/components/FontSelection.js",["76","77"],"import React, {useState} from 'react'\n\nexport default function FontSelection({setFontFamily, setFontWeight, setFontSize}) {\n    const [fontStyle, setFontStyle] = useState()\n\n    const availableFonts={\n        sans:\"font-sans\",\n        serif:\"font-serif\",\n        mono:\"font-mono\"\n    }\n\n    const availableWeights = {\n        normal:\"font-normal\",\n        bold:\"font-bold\"\n    }\n\n    const availableSizes = {\n       tiny:\"text-xs\",\n       small:\"text-sm\",\n       normal:\"text-base\",\n       large:\"text-lg\",\n       huge:\"text-xl\"\n    }\n\n    \n    const selectStyle = \"w-3/6 h-8 rounded bg-darkTheme-400 text-white\"\n    const fontFamilyOnChangeHandler = (e) => {\n        const key = Object.keys(availableFonts)[Number(e.target.value)]\n        setFontFamily({[key]:availableFonts[key]})\n    }\n    \n    const fontWeightOnChangeHandler = (e) => {\n        const key = Object.keys(availableWeights)[Number(e.target.value)]\n        console.log(key, availableWeights[key])\n        setFontWeight({[key]:availableWeights[key]})\n    }\n\n    const fontSizeOnChangeHandler = (e) => {\n        console.log(e.target.value)\n        const key = Object.keys(availableSizes)[Number(e.target.value)]\n        setFontSize({[key]:availableSizes[key]})\n    }\n    const selectTitleStyle = \"font-lg text-white-400\"\n    const selectContainerStyle = \"w-3/4 h-24 flex flex-row justify-between items-center\"\n\n    return (\n        <div className=\"h-5/6 w-full h-full\">\n            <div className=\"w-full h-5/6 items-center pt-8 flex flex-col justify-around\">\n\n                <div className={selectContainerStyle}>\n                    <h1 className={selectTitleStyle}>Family</h1>\n                    <select className={selectStyle} onChange={(e) => fontFamilyOnChangeHandler(e) }>\n                        {Object.keys(availableFonts).map((val,idx) => \n                        (\n                            <option value={idx} key={idx}>{val}</option>\n                        ))}\n                    </select>\n                </div>\n\n                <div className={selectContainerStyle}>\n                    <h1 className={selectTitleStyle}>Weight</h1>\n                    <select defaultValue={3} className={selectStyle} onChange={(e) => fontWeightOnChangeHandler(e) }>\n                        {Object.keys(availableWeights).map((val,idx) => \n                        (\n                            <option value={idx} key={idx}>{val}</option>\n                        ))}\n                    </select>\n                </div>\n\n                <div className={selectContainerStyle}>\n                    <h1 className={selectTitleStyle}>Size</h1>\n                    <select defaultValue={2} className={selectStyle} onChange={(e) => fontSizeOnChangeHandler(e) }>\n                        {Object.keys(availableSizes).map((val,idx) => \n                        (\n                            <option value={idx} key={idx}>{val}</option>\n                        ))}\n                    </select>\n                </div>\n\n            </div>\n        </div>\n    )\n}\n","/Users/cgor/Github/pdfbuilder/src/components/Details.js",["78"],"import React from 'react'\n\nexport default function Details() {\n    // Reuses the same props for each input field\n    const propBuilder = ({ placeholder, id, type }) => {\n        const onBlurProp = (e) => { e.target.placeholder = placeholder }\n        const onFocusProp = (e) => { e.target.placeholder = '' }\n        return ({\n            className: \"border-solid border-b-2 border-customGrey-900 text-white w-full min-w-full p-2 text-xl rounded bg-darkTheme-400\",\n            onBlur: onBlurProp,\n            onFocus: onFocusProp,\n            placeholder,\n            id,\n            name: id,\n            type,\n\n        })\n    }\n    // Input consistent style without duplicating html\n    const inputBuilder = (title, props = \"p-0\") => {\n        return (\n            <div className={`flex flex-col mt-2 pr-2 `}>\n                <label className=\"text-xs text-gray-200 font-bold pb-2\">{title}</label>\n                <input\n                    {...propBuilder(props)}\n                />\n            </div>\n        )\n    }\n\n    return (\n            <div className=\"flex flex-col justify-between h-full py-8 w-full\">\n                <div>\n                    {inputBuilder('Document Title' , {placeholder:\"Document Title\", id:\"documentTitle\", id:\"documentTitle\"})}\n                </div>\n                <div className=\"flex flex-row justify-between\">\n                    {inputBuilder('First Name', { placeholder: 'john', id: 'firstName', type: 'text' })}\n                    {inputBuilder('Last Name', { placeholder: 'doe', id: 'lastName', type: 'text' })}\n                </div>\n                {inputBuilder('Address Line 1', { placeholder: '12 Road', id: 'addressLine1', type: 'text' })}\n                {inputBuilder('Address Line 2', { placeholder: 'Village', id: 'addressLine2', type: 'text' })}\n                <div className=\"flex flex-row justify-between\">\n                    {inputBuilder('City', { placeholder: 'Liverpool', id: 'city', type: 'text' })}\n                    {inputBuilder('Postal/Zip code', { placeholder: 'L1 8JQ', id: 'postalCode', type: 'text' })}\n                </div>\n                <div className=\"flex flex-row justify-between\">\n                    {inputBuilder('Telephone', { placeholder: '0151 1234567', id: 'telephone', type: 'text' })}\n                    {inputBuilder('Country', { placeholder: 'United Kingdom', id: 'country', type: 'text' })}\n                </div>\n            </div>\n    )\n}\n","/Users/cgor/Github/pdfbuilder/src/components/Buttons.js",[],"/Users/cgor/Github/pdfbuilder/src/components/Stage.js",["79"],"import React, { useState } from 'react'\nimport StageName from './StageName'\n\nexport default function Stage({ currentStage }) {\n\n\n\n    const isSelected = (pos) => {\n        return Number(pos) === Number(currentStage)\n    }\n    return (\n        <div className=\"flex justify-between pb-2 border-solid border-gray-900 border-b-2 w-full\">\n            <StageName selected={isSelected(0)} number=\"1\" title=\"Details\" />\n            <StageName selected={isSelected(1)} number=\"2\" title=\"Picture\" />\n            <StageName selected={isSelected(2)} number=\"3\" title=\"Font\" />\n        </div >\n    )\n}\n","/Users/cgor/Github/pdfbuilder/src/components/ImageDropper.js",["80"],"import React, { useState } from 'react'\nimport Dropzone from 'react-dropzone'\n\nexport default function ImageDropper({setImage}) {\n\n    const imageHandler = (image) => {\n        const fr = new FileReader()\n        image.forEach((file)=>{\n            fr.readAsDataURL(file)\n            fr.onloadend =  (res)=> {\n                setImage(res.currentTarget.result)\n            }\n        })\n    }\n    return (\n            <div className=\"h-full flex flex-col justify-center items-center my-4 rounded\">\n                <Dropzone onDrop={acceptedFiles => imageHandler(acceptedFiles)}>\n                    {({ getRootProps, getInputProps }) => (\n                        <section className=\"border-8 border-blue-300 rounded-lg h-4/5 w-full\">\n                            <div className=\"h-full flex flex-col justify-center items-center\" {...getRootProps()}>\n                                <input {...getInputProps()} />\n                                    <svg className=\"h-20\"xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"#60a5fa\">\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-8l-4-4m0 0L8 8m4-4v12\" />\n                                    </svg>\n                                <h1 className=\"text-lg font-semibold text-center text-blue-400 p-4 select-none\"> CLICK OR DRAG IMAGE HERE</h1>\n                            </div>\n                        </section>\n                    )}\n                </Dropzone>\n\n            </div>\n    )\n}\n","/Users/cgor/Github/pdfbuilder/src/components/StageName.js",[],"/Users/cgor/Github/pdfbuilder/src/components/PDFMaker.js",["81","82","83","84","85","86","87","88"],"/Users/cgor/Github/pdfbuilder/src/assets/Roboto.js",["89"],"/Users/cgor/Github/pdfbuilder/src/assets/test.js",[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":1,"column":27,"nodeType":"96","messageId":"97","endLine":1,"endColumn":36},{"ruleId":"94","severity":1,"message":"98","line":1,"column":16,"nodeType":"96","messageId":"97","endLine":1,"endColumn":24},{"ruleId":"99","severity":1,"message":"100","line":24,"column":104,"nodeType":"101","messageId":"102","endLine":24,"endColumn":106},{"ruleId":"103","severity":1,"message":"104","line":31,"column":25,"nodeType":"105","endLine":31,"endColumn":108},{"ruleId":"94","severity":1,"message":"106","line":12,"column":12,"nodeType":"96","messageId":"97","endLine":12,"endColumn":23},{"ruleId":"94","severity":1,"message":"107","line":12,"column":25,"nodeType":"96","messageId":"97","endLine":12,"endColumn":38},{"ruleId":"94","severity":1,"message":"108","line":42,"column":11,"nodeType":"96","messageId":"97","endLine":42,"endColumn":23},{"ruleId":"94","severity":1,"message":"109","line":59,"column":11,"nodeType":"96","messageId":"97","endLine":59,"endColumn":23},{"ruleId":"94","severity":1,"message":"110","line":4,"column":12,"nodeType":"96","messageId":"97","endLine":4,"endColumn":21},{"ruleId":"94","severity":1,"message":"111","line":4,"column":23,"nodeType":"96","messageId":"97","endLine":4,"endColumn":35},{"ruleId":"112","severity":1,"message":"113","line":34,"column":105,"nodeType":"114","messageId":"102","endLine":34,"endColumn":107},{"ruleId":"94","severity":1,"message":"98","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":25},{"ruleId":"94","severity":1,"message":"98","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":25},{"ruleId":"94","severity":1,"message":"115","line":3,"column":8,"nodeType":"96","messageId":"97","endLine":3,"endColumn":21},{"ruleId":"94","severity":1,"message":"116","line":4,"column":9,"nodeType":"96","messageId":"97","endLine":4,"endColumn":21},{"ruleId":"94","severity":1,"message":"117","line":9,"column":11,"nodeType":"96","messageId":"97","endLine":9,"endColumn":22},{"ruleId":"94","severity":1,"message":"118","line":20,"column":11,"nodeType":"96","messageId":"97","endLine":20,"endColumn":17},{"ruleId":"94","severity":1,"message":"119","line":26,"column":11,"nodeType":"96","messageId":"97","endLine":26,"endColumn":23},{"ruleId":"120","severity":1,"message":"121","line":41,"column":13,"nodeType":"122","messageId":"123","endLine":52,"endColumn":14},{"ruleId":"94","severity":1,"message":"124","line":78,"column":22,"nodeType":"96","messageId":"97","endLine":78,"endColumn":32},{"ruleId":"125","severity":1,"message":"126","line":124,"column":8,"nodeType":"127","endLine":124,"endColumn":16,"suggestions":"128"},{"ruleId":"129","severity":1,"message":"130","line":1,"column":1,"nodeType":"131","messageId":"102","fix":"132"},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'dispatching' is assigned a value but never used.","'isDispatching' is assigned a value but never used.","'stageHandler' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'fontStyle' is assigned a value but never used.","'setFontStyle' is assigned a value but never used.","no-dupe-keys","Duplicate key 'id'.","ObjectExpression","'FontSelection' is defined but never used.","'AmiriRegular' is defined but never used.","'sizeMapping' is assigned a value but never used.","'height' is assigned a value but never used.","'validateData' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'isComplete' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'addElement', 'addElements', 'addRow', 'currentMargin', 'details.addressLine1', 'details.city', 'details.country', 'details.documentTitle', 'details.firstName', 'details.fontFamily', 'details.fontSize', 'details.image', 'details.lastName', 'details.postalCode', 'details.telephone', 'doc', 'isSaving', 'valid', and 'width'. Either include them or remove the dependency array. If 'isSaving' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["135"],"unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program",{"range":"136","text":"137"},"no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},[-1,0],"","Update the dependencies array to be: [addElement, addElements, addRow, currentMargin, details.addressLine1, details.city, details.country, details.documentTitle, details.firstName, details.fontFamily, details.fontSize, details.image, details.lastName, details.postalCode, details.telephone, doc, isSaving, saving, valid, width]",{"range":"140","text":"141"},[4106,4114],"[addElement, addElements, addRow, currentMargin, details.addressLine1, details.city, details.country, details.documentTitle, details.firstName, details.fontFamily, details.fontSize, details.image, details.lastName, details.postalCode, details.telephone, doc, isSaving, saving, valid, width]"]